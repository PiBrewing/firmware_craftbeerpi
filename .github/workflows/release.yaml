name: release-image

on:
  push:
    tags:
    - "v*"

env:
  BUILDROOT_VERSION: '2022.05.1'
  IMAGE_VERSION: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-20.04
    environment: ${{ vars.RELEASE_ENV }}
    strategy:
      matrix:
        board:
          - 'raspberrypi3-64'
          - 'raspberrypi4-64'
      fail-fast: false

    env:
      BUILD_NAME: 'cbpifw-${{ matrix.board }}_${{ github.ref_name }}'
      CONFIG_NAME: 'cbpifw_${{ matrix.board }}_defconfig'
      UPDATE_BUNDLE: cbpifw-${{ matrix.board }}_update.bin
    steps:
      - name: free space on runner
        run: |
          sudo rm -rf /usr/share/swift /usr/share/dotnet
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install bc
      - name: checkout Buildroot
        uses: actions/checkout@v2
        with:
          repository: 'buildroot/buildroot'
          ref: '${{ env.BUILDROOT_VERSION }}'
          path: 'buildroot'

      - name: checkout external
        uses: actions/checkout@v2
        with:
          path: 'external'
          submodules: 'recursive'

      - name: configure image
        run: |
          make -s BR2_EXTERNAL=$GITHUB_WORKSPACE/external $CONFIG_NAME
        working-directory: 'buildroot'

      - shell: bash
        env:
          RELEASE_SIGNING_KEY_B64: ${{ secrets.RELEASE_SIGNING_KEY_B64 }}
          RELEASE_SIGNING_CERT_B64: ${{ secrets.RELEASE_SIGNING_CERT_B64 }}
        run: |
          openssl version
          [ -z "$RELEASE_SIGNING_KEY_B64" ] && echo "Signing key is missing" && exit 1
          [ -z "$RELEASE_SIGNING_CERT_B64" ] && echo "Signing cert is missing" && exit 1
          mkdir -p buildroot/output/images/
          echo $RELEASE_SIGNING_KEY_B64 | base64 -d > buildroot/output/images/cbpifw-update.key
          echo $RELEASE_SIGNING_CERT_B64 | base64 -d > buildroot/output/images/cbpifw-update.pem
          openssl verify -verbose -CAfile external/.cert-staging/ca.crt buildroot/output/images/cbpifw-update.pem
          SIGNING_KEY_PUB=$(openssl pkey -in buildroot/output/images/cbpifw-update.key -pubout | openssl md5)
          SIGNING_CERT_PUB=$(openssl x509 -in buildroot/output/images/cbpifw-update.pem -pubkey -noout | openssl md5)
          [ "$SIGNING_KEY_PUB" == "$SIGNING_CERT_PUB" ] || echo "Signing key does not match signing cert" && exit 1      

      - name: download source
        run: |
          make -s source
        working-directory: 'buildroot'

      - name: build image
        run: |
          make -s all
        working-directory: 'buildroot'

      - name: Destroy keys again
        run: |
          rm -f buildroot/output/images/*.key
          rm -f buildroot/output/images/*.pem
          rm -f buildroot/output/images/*.crt
          rm -f buildroot/output/images/*.cert

      - name: rename sd card image and update bundle
        run: |
          mv buildroot/output/images/sdcard.img buildroot/output/images/${BUILD_NAME}.img
          mv buildroot/output/images/${UPDATE_BUNDLE} buildroot/output/images/${BUILD_NAME}_update.bin"
      
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "buildroot/output/images/${{ env.BUILD_NAME }}.img, buildroot/output/images/${{ env.BUILD_NAME }}_update.bin"
          prerelease: true
          allowUpdates: true
